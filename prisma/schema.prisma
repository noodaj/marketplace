// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

//each item can be in a item quantity
model Item {
    id           String         @id @default(cuid())
    name         String
    price        Float
    quantity     Int
    image        String?
    ItemQuantity ItemQuantity[]
}

model ShoppingCart {
    id     String         @id @default(cuid())
    items  ItemQuantity[]
    userID String         @unique
    user   User?          @relation(fields: [userID], references: [id])
}

model ItemQuantity {
    id             String        @id @default(cuid())
    quantity       Int
    itemID         String?
    itemName       String        @default("")
    item           Item?         @relation(fields: [itemID], references: [id])
    shoppingCartId String?
    ShoppingCart   ShoppingCart? @relation(fields: [shoppingCartId], references: [id])

    @@index([shoppingCartId])
    @@index([itemID])
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String        @id @default(cuid())
    name          String?
    userName      String?       @unique
    password      String        @default("")        
    image         String?
    accounts      Account[]
    sessions      Session[]
    cart          ShoppingCart?
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
